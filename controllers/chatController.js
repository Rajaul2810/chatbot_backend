const { generateChatResponse } = require('../services/chatService');

const handleChat = async (req, res) => {
  const { message, category, previousMessages } = req.body;

  
  try {
    // Validate and format previousMessages if needed
    let formattedPreviousMessages = [];
    
    if (previousMessages && Array.isArray(previousMessages)) {
      // Convert frontend format (text/sender) to backend format (role/content)
      formattedPreviousMessages = previousMessages
        .filter(msg => msg && typeof msg === 'object')
        .map(msg => {
          // Handle frontend format: { text: "...", sender: "..." }
          if (msg.text && msg.sender) {
            return {
              role: msg.sender === 'user' ? 'user' : 'assistant',
              content: msg.text
            };
          }
          // Handle backend format: { role: "...", content: "..." }
          else if (msg.role && msg.content) {
            return msg;
          }
          return null;
        })
        .filter(msg => msg !== null);
      
     
    }
    
    const response = await generateChatResponse(message, category, formattedPreviousMessages);
    res.json({ response });
  } catch (error) {
    console.error("Chat error:", error);
    res.status(500).json({ error: 'Something went wrong' });
  }
};

// Test endpoint for conversation context
const testConversationContext = async (req, res) => {
  try {
    // Simulate the conversation you mentioned
    const testPreviousMessages = [
      {
        role: "user",
        content: "MBA course details"
      },
      {
        role: "assistant",
        content: "The MBA course is designed for those preparing for IBA, DU. It includes 43 classes over 4 months, each lasting 2 hours. The course price is BDT 16,000 on-campus and BDT 8,075 online. It includes 5 important books and 5 mock tests. To enroll, you can call or visit a Mentors branch, or visit [Mentors Learning](https://mentorslearning.com) for online registration. üòä"
      }
    ];

    const response = await generateChatResponse("price koto?", "Course & Mock Info", testPreviousMessages);
    
    res.json({ 
      test: "Conversation Context Test",
      userInput: "price koto?",
      previousMessages: testPreviousMessages,
      response: response
    });
  } catch (error) {
    console.error("Test error:", error);
    res.status(500).json({ error: 'Test failed' });
  }
};

// Test endpoint for frontend format conversion
const testFrontendFormat = async (req, res) => {
  try {
    // Simulate the frontend format that was causing issues
    const testPreviousMessages = [
      {
        text: "BBA course details",
        sender: "user"
      },
      {
        text: "BBA course ‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡ß™ ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡ß™‡ß¶ ‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶¶‡ßà‡¶∞‡ßç‡¶ò‡ßç‡¶Ø ‡ß® ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡•§ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶è‡¶á ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡ßß‡ß®,‡ß¶‡ß≠‡ß´ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶®-‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡¶æ‡¶∏‡ßá ‡ß®‡ß¶,‡ß≠‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡•§ ‡¶è‡¶á ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø, ‡¶ó‡¶£‡¶ø‡¶§, ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£‡¶æ‡¶§‡ßç‡¶Æ‡¶ï ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶® ‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá‡¶∞ ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶≠‡ßÅ‡¶ï‡ßç‡¶§ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡ßß‡ß´ ‡¶ü‡¶ø ‡¶Æ‡¶ï ‡¶ü‡ßá‡¶∏‡ßç‡¶ü‡¶ì ‡¶Ö‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶≠‡ßÅ‡¶ï‡ßç‡¶§ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ú‡¶æ‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶ï‡¶ü‡¶∏‡ßç‡¶• Mentors' ‡¶∂‡¶æ‡¶ñ‡¶æ‡¶Ø‡¶º ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶¨‡¶æ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶≠‡¶ø‡¶ú‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä",
        sender: "Mentors"
      }
    ];

    const response = await generateChatResponse("price?", "Course & Mock Info", testPreviousMessages);
    
    res.json({ 
      test: "Frontend Format Test",
      userInput: "price?",
      previousMessages: testPreviousMessages,
      response: response
    });
  } catch (error) {
    console.error("Frontend format test error:", error);
    res.status(500).json({ error: 'Frontend format test failed' });
  }
};

module.exports = { handleChat, testConversationContext, testFrontendFormat };
